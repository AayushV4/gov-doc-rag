---
apiVersion: v1
kind: Namespace
metadata:
  name: amazon-cloudwatch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentbit
  namespace: amazon-cloudwatch
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::023268101038:role/gov-doc-rag-fluentbit
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: amazon-cloudwatch
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush                     5
        Log_Level                 info
        Daemon                    off
        Parsers_File              parsers.conf
        HTTP_Server               On
        HTTP_Listen               0.0.0.0
        HTTP_Port                 2020
        storage.path              /var/fluent-bit/state/flb-storage/
        storage.sync              normal
        storage.checksum          off
        storage.max_chunks_up     128
        storage.backlog.mem_limit 5M

    [INPUT]
        Name                tail
        Path                /var/log/containers/*.log
        multiline.parser    docker, cri
        Tag                 kube.*
        Mem_Buf_Limit       50MB
        Skip_Long_Lines     On
        Refresh_Interval    10
        DB                  /var/fluent-bit/state/flb_kube.db
        DB.sync             normal

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Buffer_Size         0

    [OUTPUT]
        Name                cloudwatch_logs
        Match               kube.var.log.containers.api-*_gov-doc-rag_*
        region              us-east-1
        log_group_name      /aws/eks/gov-doc-rag-cluster/application/api
        log_stream_prefix   from-fluent-bit-
        auto_create_group   false
        retry_limit         2

    [OUTPUT]
        Name                cloudwatch_logs
        Match               kube.var.log.containers.ingestor-*_gov-doc-rag_*
        region              us-east-1
        log_group_name      /aws/eks/gov-doc-rag-cluster/application/ingestor
        log_stream_prefix   from-fluent-bit-
        auto_create_group   false
        retry_limit         2

    [OUTPUT]
        Name                cloudwatch_logs
        Match               kube.var.log.containers.indexer-*_gov-doc-rag_*
        region              us-east-1
        log_group_name      /aws/eks/gov-doc-rag-cluster/application/indexer
        log_stream_prefix   from-fluent-bit-
        auto_create_group   false
        retry_limit         2

    [OUTPUT]
        Name                cloudwatch_logs
        Match               kube.var.log.containers.web-*_gov-doc-rag_*
        region              us-east-1
        log_group_name      /aws/eks/gov-doc-rag-cluster/application/web
        log_stream_prefix   from-fluent-bit-
        auto_create_group   false
        retry_limit         2

    [OUTPUT]
        Name                cloudwatch_logs
        Match               kube.*
        region              us-east-1
        log_group_name      /aws/eks/gov-doc-rag-cluster/containers
        log_stream_prefix   from-fluent-bit-
        auto_create_group   false
        retry_limit         2

  parsers.conf: |
    [PARSER]
        Name                docker
        Format              json
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep           On
        Decode_Field_As     escaped_utf8 log do_next
        Decode_Field_As     json log

    [PARSER]
        Name                cri
        Format              regex
        Regex               ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
        Time_Key            time
        Time_Format         %Y-%m-%dT%H:%M:%S.%L%z
        Time_Keep           On
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluent-bit
  namespace: amazon-cloudwatch
  labels:
    k8s-app: fluent-bit
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluent-bit
  template:
    metadata:
      labels:
        k8s-app: fluent-bit
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: fluentbit
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: fluent-bit
        image: public.ecr.aws/aws-observability/aws-for-fluent-bit:2.31.12
        imagePullPolicy: Always
        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: CLUSTER_NAME
          value: "gov-doc-rag-cluster"
        - name: HOST_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CI_VERSION
          value: "k8s/1.3.26"
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: fluentbitstate
          mountPath: /var/fluent-bit/state
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: runlogjournal
          mountPath: /run/log/journal
          readOnly: true
        - name: dmesg
          mountPath: /var/log/dmesg
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: fluentbitstate
        hostPath:
          path: /var/fluent-bit/state
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: runlogjournal
        hostPath:
          path: /run/log/journal
      - name: dmesg
        hostPath:
          path: /var/log/dmesg
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - operator: "Exists"
        effect: "NoExecute"
      - operator: "Exists"
        effect: "NoSchedule"
