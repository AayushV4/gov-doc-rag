name: Deploy API

on:
  push:
    branches: [ main ]
    paths:
      - 'services/api/**'
      - '.github/workflows/deploy-api.yml'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  ACCOUNT_ID: "023268101038"
  ECR_REPOSITORY: gov-doc-rag-api
  EKS_CLUSTER: gov-doc-rag-cluster
  K8S_NAMESPACE: gov-doc-rag
  DEPLOYMENT_NAME: api
  CONTAINER_NAME: api

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::023268101038:role/gov-doc-rag-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Compute image tag
        id: tag
        run: echo "tag=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$(date -u +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./services/api/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.tag.outputs.tag }}

      - name: Who am I? (verify AWS creds)
        run: aws sts get-caller-identity

      - name: Update kubeconfig (write to temp file)
        run: |
          KCFG="$RUNNER_TEMP/kubeconfig"
          aws eks update-kubeconfig \
            --region "${{ env.AWS_REGION }}" \
            --name "${{ env.EKS_CLUSTER }}" \
            --alias "gha-${{ env.EKS_CLUSTER }}" \
            --kubeconfig "$KCFG"
          echo "KUBECONFIG=$KCFG" >> "$GITHUB_ENV"

      - name: Can we get a token?
        run: aws eks get-token --region "${{ env.AWS_REGION }}" --cluster-name "${{ env.EKS_CLUSTER }}" >/dev/null

      - name: Check cluster reachability
        run: kubectl --request-timeout=20s cluster-info

      - name: Rollout new image
        env:
          IMG: ${{ steps.tag.outputs.tag }}
        run: |
          kubectl -n "${{ env.K8S_NAMESPACE }}" set image deploy/"${{ env.DEPLOYMENT_NAME }}" "${{ env.CONTAINER_NAME }}"="$IMG"
          kubectl -n "${{ env.K8S_NAMESPACE }}" rollout status deploy/"${{ env.DEPLOYMENT_NAME }}" --timeout=5m
